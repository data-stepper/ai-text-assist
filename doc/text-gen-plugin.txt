*text-gen-plugin.txt* An AI based text generation plugin for neovim.

                  Text generation plugin for neovim

==============================================================================

CONTENTS                                 *text-gen-plugin-contents*

    1. Introduction....................................|text-gen-plugin-intro|
	2. Usage...................................................|text-examples|
	3. Options............................................|config-gen-options|
	4. Other....................................................|config-other|
	5. See Also.............................................|text-plugin-link|
	6. Author.........................................................|author|
	7. License.......................................................|license|
	8. Copyright/Legal Statement...................................|copyright|
	9. About...........................................................|about|
	10. Credits......................................................|credits|

Original Author:    Bent Mueller
License:            MIT

INTRODUCTION                                          *text-gen-plugin-intro*

This plugin combines text generated by the python module aitextgen with models
from EleutherAI (GPT-NEO). And provides text generation directly from inside
neovim. The plugin so far has three commands:

	:TextGenGenerate
	:TextGenRestart
	:TextGenQuit

The first one can be used when visually selecting a range of text, then
pressing <C-g> (which it is mapped to by default) to generate text.
The first time using it, it might take somewhat around 10 seconds until
the daemon started and loaded the model. After that, it should generate text
within seconds. Note that it does take a little time since the model it is
using is quite big (EleutherAI-gpt-neo-2.7B).

USAGE 														*text-examples*

In order to achieve high quality text generation, the model needs to see
some examples of code style, variables and libraries it can use in the code.
For this purpose we will focus in this chapter on providing exactly that
in many language I use the model with.
